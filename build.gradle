plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group = 'com.example'
version = '1.0.0'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    junitVersion = '5.9.2'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.main_screen'
    mainClass = 'com.example.main_screen.GameCatalogApp'
}
jar {
    manifest {
        attributes(
                'Main-Class': 'com.example.main_screen.GameCatalogApp'
        )
    }
}

javafx {
    version = '17'
    modules = ['javafx.controls', 'javafx.fxml']
}

// Project dependencies
dependencies {
    implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'
    //implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'
    //implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    //implementation 'com.fasterxml.jackson.core:jackson-annotations:2.18.2'
    implementation 'com.google.code.gson:gson:2.8.8'

    implementation 'org.openjfx:javafx-controls:17'
    implementation 'org.openjfx:javafx-fxml:17'

    // JUnit for testing
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}
test {
    useJUnitPlatform()
}

jlink {
    options = [
            '--strip-debug', '--compress', '2',
            '--no-header-files', '--no-man-pages',
            '--add-modules', 'ALL-MODULE-PATH'
    ]
    launcher {
        name = 'app'
    }

    addOptions('--add-modules', 'java.base,java.desktop,javafx.controls,javafx.fxml,jdk.zipfs')
    addOptions('--bind-services')

    if (org.gradle.internal.os.OperatingSystem.current().isMacOsX()) {
        addOptions('--mac-sign')
    }

    forceMerge('jackson')
    jpackage {
        imageName = "GameCatalog"
        installerName = "GameCatalog"
        appVersion = "1.1.0"
        vendor = "CE216"

        installerType = org.gradle.internal.os.OperatingSystem.current().isWindows() ? "exe" : "pkg"

        if (org.gradle.internal.os.OperatingSystem.current().isWindows()) {
            installerOptions = [
                    '--win-shortcut',
                    '--win-menu',
                    '--win-dir-chooser',
                    '--win-per-user-install'
            ]
        }

        resourceDir = file("$buildDir/resources/main")
        imageOutputDir = file("$buildDir/jpackage")
        options = ['--verbose']
    }





}

task packageWindows(type: Exec) {
    dependsOn('jlink')

    onlyIf { org.gradle.internal.os.OperatingSystem.current().isWindows() }

    workingDir = projectDir

    def jlinkOutput = file("$buildDir/image")

    commandLine = [
            'jpackage',
            '--type', 'app-image',
            '--name', 'GameCatalog',
            '--app-version', '1.1.0',
            '--vendor', 'CE216',
            '--module', "${application.mainModule}/${application.mainClass}",
            '--runtime-image', jlinkOutput,
            '--dest', "$buildDir/jpackage",
            '--win-shortcut',
            '--win-menu',
            '--win-dir-chooser',
            '--win-per-user-install'
    ]
}

run {
    doFirst {
        jvmArgs = [
                '--module-path', classpath.asPath,
                '--add-modules', 'javafx.controls,javafx.fxml'
        ]
    }
}
